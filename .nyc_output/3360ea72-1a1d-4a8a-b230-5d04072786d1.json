{"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/alimento.ts":{"path":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/alimento.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":25}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":35}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":27}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"7":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"8":{"start":{"line":35,"column":8},"end":{"line":35,"column":29}},"9":{"start":{"line":42,"column":8},"end":{"line":42,"column":30}},"10":{"start":{"line":49,"column":8},"end":{"line":49,"column":26}},"11":{"start":{"line":56,"column":8},"end":{"line":56,"column":26}},"12":{"start":{"line":59,"column":0},"end":{"line":59,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":57},"end":{"line":22,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":14},"end":{"line":29,"column":5}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":15},"end":{"line":36,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":19},"end":{"line":43,"column":5}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":15},"end":{"line":50,"column":5}},"line":48},"5":{"name":"(anonymous_5)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":15},"end":{"line":57,"column":5}},"line":55}},"branchMap":{},"s":{"0":1,"1":1,"2":11,"3":11,"4":11,"5":11,"6":11,"7":1,"8":1,"9":49,"10":13,"11":13,"12":1},"f":{"0":11,"1":1,"2":1,"3":49,"4":13,"5":13},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/alimento.ts","sources":["/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/alimento.ts"],"names":[],"mappings":";;;AAKA;;GAEG;AACH,MAAa,IAAI;IACf;;;;;;;OAOG;IACH,YAA6B,IAAY,EACtB,QAAgB,EAAmB,SAAmB,EACtD,KAAa,EAAmB,KAAY;QAFlC,SAAI,GAAJ,IAAI,CAAQ;QACtB,aAAQ,GAAR,QAAQ,CAAQ;QAAmB,cAAS,GAAT,SAAS,CAAU;QACtD,UAAK,GAAL,KAAK,CAAQ;QAAmB,UAAK,GAAL,KAAK,CAAO;IAE/D,CAAC;IACD;;;OAGG;IACI,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD;;;OAGG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD;;;OAGG;IACI,YAAY;QACjB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACD;;;OAGG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD;;;OAGG;IACI,QAAQ;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CACF;AAjDD,oBAiDC","sourcesContent":["/**\n * Diferentes grupos a los que puede pertenecer un alimento\n */\ntype Grupo = \"Grupo1\" | \"Grupo2\" | \"Grupo3\" | \"Grupo4\" | \"Grupo5\";\n\n/**\n * Clase con la que representamos los alimentos\n */\nexport class Food {\n  /**\n   * Constructor de la clase\n   * @param name Nombre del alimento\n   * @param locality Localización de origen\n   * @param nutrients Composición nutricional del alimento\n   * @param price Precio por kg en euros\n   * @param group Grupo alimenticio al que pertenece\n   */\n  constructor(private readonly name: string,\n    private readonly locality: string, private readonly nutrients: number[],\n    private readonly price: number, private readonly group: Grupo) {\n\n  }\n  /**\n   * Getter de nombre\n   * @returns nombre del alimento\n   */\n  public getName() : string {\n    return this.name;\n  }\n  /**\n   * Getter de localización\n   * @returns localización de origen del alimento\n   */\n  public getLocal() : string {\n    return this.locality;\n  }\n  /**\n   * Getter de macronutrientes\n   * @returns macronutrientes y calorías del alimento\n   */\n  public getNutrients() : number[] {\n    return this.nutrients;\n  }\n  /**\n   * Getter de precio\n   * @returns precio en euros/kilo del alimento\n   */\n  public getPrice() : number {\n    return this.price;\n  }\n  /**\n   * Getter de grupo\n   * @returns grupo alimenticio\n   */\n  public getGroup() : Grupo {\n    return this.group;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9cd26469a423c1cc230da55c6d8a63610c27ef2f","contentHash":"921ed4d6094912ac0128b22ddb82967d9059e8bc8f4d308428d55626e7265dea"},"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts":{"path":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"3":{"start":{"line":19,"column":27},"end":{"line":19,"column":32}},"4":{"start":{"line":20,"column":30},"end":{"line":20,"column":35}},"5":{"start":{"line":21,"column":31},"end":{"line":21,"column":36}},"6":{"start":{"line":22,"column":25},"end":{"line":22,"column":30}},"7":{"start":{"line":23,"column":23},"end":{"line":23,"column":24}},"8":{"start":{"line":26,"column":8},"end":{"line":43,"column":11}},"9":{"start":{"line":27,"column":12},"end":{"line":30,"column":13}},"10":{"start":{"line":28,"column":16},"end":{"line":28,"column":27}},"11":{"start":{"line":29,"column":16},"end":{"line":29,"column":36}},"12":{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},"13":{"start":{"line":32,"column":16},"end":{"line":32,"column":39}},"14":{"start":{"line":33,"column":16},"end":{"line":33,"column":27}},"15":{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},"16":{"start":{"line":36,"column":16},"end":{"line":36,"column":40}},"17":{"start":{"line":37,"column":16},"end":{"line":37,"column":27}},"18":{"start":{"line":39,"column":12},"end":{"line":42,"column":13}},"19":{"start":{"line":40,"column":16},"end":{"line":40,"column":34}},"20":{"start":{"line":41,"column":16},"end":{"line":41,"column":27}},"21":{"start":{"line":44,"column":8},"end":{"line":50,"column":9}},"22":{"start":{"line":45,"column":12},"end":{"line":45,"column":33}},"23":{"start":{"line":46,"column":12},"end":{"line":46,"column":25}},"24":{"start":{"line":49,"column":12},"end":{"line":49,"column":24}},"25":{"start":{"line":58,"column":23},"end":{"line":58,"column":24}},"26":{"start":{"line":59,"column":24},"end":{"line":59,"column":25}},"27":{"start":{"line":60,"column":23},"end":{"line":60,"column":24}},"28":{"start":{"line":61,"column":22},"end":{"line":61,"column":23}},"29":{"start":{"line":62,"column":31},"end":{"line":62,"column":33}},"30":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"31":{"start":{"line":63,"column":21},"end":{"line":63,"column":22}},"32":{"start":{"line":64,"column":12},"end":{"line":64,"column":58}},"33":{"start":{"line":65,"column":12},"end":{"line":65,"column":59}},"34":{"start":{"line":66,"column":12},"end":{"line":66,"column":58}},"35":{"start":{"line":67,"column":12},"end":{"line":67,"column":57}},"36":{"start":{"line":69,"column":8},"end":{"line":69,"column":68}},"37":{"start":{"line":70,"column":8},"end":{"line":70,"column":32}},"38":{"start":{"line":78,"column":36},"end":{"line":78,"column":38}},"39":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"40":{"start":{"line":79,"column":21},"end":{"line":79,"column":22}},"41":{"start":{"line":80,"column":12},"end":{"line":80,"column":69}},"42":{"start":{"line":82,"column":8},"end":{"line":82,"column":35}},"43":{"start":{"line":90,"column":21},"end":{"line":90,"column":22}},"44":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"45":{"start":{"line":91,"column":21},"end":{"line":91,"column":22}},"46":{"start":{"line":92,"column":12},"end":{"line":92,"column":47}},"47":{"start":{"line":94,"column":8},"end":{"line":94,"column":22}},"48":{"start":{"line":101,"column":8},"end":{"line":104,"column":9}},"49":{"start":{"line":101,"column":21},"end":{"line":101,"column":22}},"50":{"start":{"line":102,"column":12},"end":{"line":102,"column":89}},"51":{"start":{"line":103,"column":12},"end":{"line":103,"column":51}},"52":{"start":{"line":107,"column":0},"end":{"line":107,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":23},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":20},"end":{"line":51,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":27},"end":{"line":26,"column":28}},"loc":{"start":{"line":26,"column":38},"end":{"line":43,"column":9}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":33},"end":{"line":71,"column":5}},"line":57},"4":{"name":"(anonymous_4)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":29},"end":{"line":83,"column":5}},"line":77},"5":{"name":"(anonymous_5)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":18},"end":{"line":95,"column":5}},"line":89},"6":{"name":"(anonymous_6)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":12},"end":{"line":105,"column":5}},"line":100}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":30,"column":13}},{"start":{"line":27,"column":12},"end":{"line":30,"column":13}}],"line":27},"1":{"loc":{"start":{"line":27,"column":16},"end":{"line":27,"column":74}},"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":49}},{"start":{"line":27,"column":53},"end":{"line":27,"column":74}}],"line":27},"2":{"loc":{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":34,"column":13}},{"start":{"line":31,"column":12},"end":{"line":34,"column":13}}],"line":31},"3":{"loc":{"start":{"line":31,"column":16},"end":{"line":31,"column":81}},"type":"binary-expr","locations":[{"start":{"line":31,"column":16},"end":{"line":31,"column":53}},{"start":{"line":31,"column":57},"end":{"line":31,"column":81}}],"line":31},"4":{"loc":{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},{"start":{"line":35,"column":12},"end":{"line":38,"column":13}}],"line":35},"5":{"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":83}},"type":"binary-expr","locations":[{"start":{"line":35,"column":16},"end":{"line":35,"column":54}},{"start":{"line":35,"column":58},"end":{"line":35,"column":83}}],"line":35},"6":{"loc":{"start":{"line":39,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":42,"column":13}},{"start":{"line":39,"column":12},"end":{"line":42,"column":13}}],"line":39},"7":{"loc":{"start":{"line":39,"column":16},"end":{"line":39,"column":70}},"type":"binary-expr","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":47}},{"start":{"line":39,"column":51},"end":{"line":39,"column":70}}],"line":39},"8":{"loc":{"start":{"line":44,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":50,"column":9}},{"start":{"line":44,"column":8},"end":{"line":50,"column":9}}],"line":44}},"s":{"0":1,"1":1,"2":3,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":0,"11":0,"12":3,"13":1,"14":1,"15":3,"16":0,"17":0,"18":3,"19":0,"20":0,"21":1,"22":1,"23":1,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":3,"33":3,"34":3,"35":3,"36":1,"37":1,"38":1,"39":1,"40":1,"41":3,"42":1,"43":1,"44":1,"45":1,"46":3,"47":1,"48":1,"49":1,"50":3,"51":3,"52":1},"f":{"0":3,"1":1,"2":3,"3":1,"4":1,"5":1,"6":1},"b":{"0":[0,3],"1":[3,0],"2":[1,2],"3":[3,3],"4":[0,3],"5":[3,0],"6":[0,3],"7":[3,0],"8":[1,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts","sources":["/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import {Plate} from \"./plato\";\n\n/**\n * Lista con al menos tres platos\n */\nexport type menu=[x:Plate, y:Plate, z:Plate, ...dimensiones:Plate[]];\n/**\n * Clase con la que representar el menu\n */\nexport class Menu {\n  /**\n   * @param menus Lista de platos (minimmo 3 platos por menu)\n   */\n  constructor(private readonly menus:menu) {\n  }\n  /**\n   * Comprueba que el menu cumple con almenos 3 categorias diferentes\n   * @returns Verdadero o falso si se cumple o no la condición\n   */\n  comprobarMenu(): boolean {\n    let flagEntrante=false;\n    let flagPrimerplato=false;\n    let flagSegundoPlato=false;\n    let flagPostre=false;\n    let contador=0;\n    // Si el contador es 3 o mayor hay 3 categorias diferentes como minimo por\n    // lo que es valido\n    this.menus.forEach((plato) => {\n      if (plato.getCategory()== \"Entrante\" && flagEntrante==false) {\n        contador++;\n        flagEntrante=true;\n      }\n      if (plato.getCategory()== \"Primer plato\" && flagPrimerplato==false) {\n        flagPrimerplato=true;\n        contador++;\n      }\n      if (plato.getCategory()== \"Segundo Plato\" && flagSegundoPlato==false) {\n        flagSegundoPlato=true;\n        contador++;\n      }\n      if (plato.getCategory()== \"Postre\" && flagPostre==false) {\n        flagPostre=true;\n        contador++;\n      }\n    });\n    if (contador<3) {\n      console.log(\"error\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * Método para calcular la composicion total de los platos\n   * que conforman el menu\n   * @returns retorna la composicion total del menu\n   */\n  composicionNutricionalMenu() {\n    let calorias=0;\n    let proteinas= 0;\n    let hidratos= 0;\n    let lipidos= 0;\n    let composicionTotal: number[] = [];\n    for (let i = 0; i < this.menus.length; i++) {\n      calorias+=this.menus[i].getComposition()[0];\n      proteinas+= this.menus[i].getComposition()[1];\n      hidratos+= this.menus[i].getComposition()[2];\n      lipidos+= this.menus[i].getComposition()[3];\n    }\n    composicionTotal = [calorias, proteinas, hidratos, lipidos];\n    return composicionTotal;\n  }\n  /**\n   * Método para retornar los grupos de alimentos predominantes de\n   * cada plato que contiene el menu\n   * @returns retorna la lista de grupo de alimentos\n   */\n  listadoGruposAlimentos(): string[] {\n    const listaGrupoAlimentos: string[] = [];\n    for (let i = 0; i < this.menus.length; i++) {\n      listaGrupoAlimentos.push(this.menus[i].getPredominant());\n    }\n    return listaGrupoAlimentos;\n  }\n  /**\n   * Método que retorna la suma del precio de cada\n   * plato que compone el menu\n   * @returns retorna el precio total del menu\n   */\n  precioTotal() {\n    let precio = 0;\n    for (let i = 0; i < this.menus.length; i++) {\n      precio+=this.menus[i].getPrice();\n    }\n    return precio;\n  }\n  /**\n   * Write para imprimir todos los platos de un menu, con\n   * los ingredientes de cada uno\n   */\n  write() {\n    for (let i = 0; i < this.menus.length; i++) {\n      console.log('Plato Nº '+(i+1)+' es un '+this.menus[i].getCategory());\n      console.table(this.menus[i].getFood());\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ee8108a443288a4a92e2a204e0d27e1a95fd10a7","contentHash":"e3b170208aa824be47184aca6620af0d0e46e9f3db156d4d41cd11eb7019b564"},"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/plato.ts":{"path":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/plato.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":33}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":29}},"5":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":31}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":24}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":32}},"9":{"start":{"line":26,"column":23},"end":{"line":26,"column":24}},"10":{"start":{"line":27,"column":24},"end":{"line":27,"column":25}},"11":{"start":{"line":28,"column":23},"end":{"line":28,"column":24}},"12":{"start":{"line":29,"column":22},"end":{"line":29,"column":23}},"13":{"start":{"line":30,"column":8},"end":{"line":35,"column":9}},"14":{"start":{"line":30,"column":21},"end":{"line":30,"column":22}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":79}},"16":{"start":{"line":32,"column":12},"end":{"line":32,"column":80}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":79}},"18":{"start":{"line":34,"column":12},"end":{"line":34,"column":78}},"19":{"start":{"line":36,"column":8},"end":{"line":37,"column":78}},"20":{"start":{"line":43,"column":17},"end":{"line":43,"column":18}},"21":{"start":{"line":44,"column":17},"end":{"line":44,"column":18}},"22":{"start":{"line":45,"column":17},"end":{"line":45,"column":18}},"23":{"start":{"line":46,"column":17},"end":{"line":46,"column":18}},"24":{"start":{"line":47,"column":17},"end":{"line":47,"column":18}},"25":{"start":{"line":48,"column":8},"end":{"line":68,"column":9}},"26":{"start":{"line":48,"column":21},"end":{"line":48,"column":22}},"27":{"start":{"line":49,"column":12},"end":{"line":67,"column":13}},"28":{"start":{"line":51,"column":20},"end":{"line":51,"column":25}},"29":{"start":{"line":52,"column":20},"end":{"line":52,"column":26}},"30":{"start":{"line":54,"column":20},"end":{"line":54,"column":25}},"31":{"start":{"line":55,"column":20},"end":{"line":55,"column":26}},"32":{"start":{"line":57,"column":20},"end":{"line":57,"column":25}},"33":{"start":{"line":58,"column":20},"end":{"line":58,"column":26}},"34":{"start":{"line":60,"column":20},"end":{"line":60,"column":25}},"35":{"start":{"line":61,"column":20},"end":{"line":61,"column":26}},"36":{"start":{"line":63,"column":20},"end":{"line":63,"column":25}},"37":{"start":{"line":64,"column":20},"end":{"line":64,"column":26}},"38":{"start":{"line":66,"column":20},"end":{"line":66,"column":26}},"39":{"start":{"line":69,"column":8},"end":{"line":83,"column":9}},"40":{"start":{"line":70,"column":12},"end":{"line":70,"column":41}},"41":{"start":{"line":72,"column":13},"end":{"line":83,"column":9}},"42":{"start":{"line":73,"column":12},"end":{"line":73,"column":41}},"43":{"start":{"line":75,"column":13},"end":{"line":83,"column":9}},"44":{"start":{"line":76,"column":12},"end":{"line":76,"column":41}},"45":{"start":{"line":78,"column":13},"end":{"line":83,"column":9}},"46":{"start":{"line":79,"column":12},"end":{"line":79,"column":41}},"47":{"start":{"line":81,"column":13},"end":{"line":83,"column":9}},"48":{"start":{"line":82,"column":12},"end":{"line":82,"column":41}},"49":{"start":{"line":89,"column":25},"end":{"line":89,"column":26}},"50":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"51":{"start":{"line":90,"column":21},"end":{"line":90,"column":22}},"52":{"start":{"line":91,"column":12},"end":{"line":91,"column":51}},"53":{"start":{"line":93,"column":8},"end":{"line":93,"column":37}},"54":{"start":{"line":100,"column":8},"end":{"line":100,"column":29}},"55":{"start":{"line":107,"column":8},"end":{"line":107,"column":26}},"56":{"start":{"line":115,"column":8},"end":{"line":115,"column":31}},"57":{"start":{"line":122,"column":8},"end":{"line":122,"column":37}},"58":{"start":{"line":129,"column":8},"end":{"line":129,"column":33}},"59":{"start":{"line":132,"column":0},"end":{"line":132,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":41},"end":{"line":20,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":18},"end":{"line":38,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":23},"end":{"line":84,"column":5}},"line":42},"3":{"name":"(anonymous_3)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":15},"end":{"line":94,"column":5}},"line":88},"4":{"name":"(anonymous_4)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":18},"end":{"line":101,"column":5}},"line":99},"5":{"name":"(anonymous_5)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":14},"end":{"line":108,"column":5}},"line":106},"6":{"name":"(anonymous_6)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":15},"end":{"line":116,"column":5}},"line":114},"7":{"name":"(anonymous_7)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":21},"end":{"line":123,"column":5}},"line":121},"8":{"name":"(anonymous_8)","decl":{"start":{"line":128,"column":4},"end":{"line":128,"column":5}},"loc":{"start":{"line":128,"column":21},"end":{"line":130,"column":5}},"line":128}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"1":{"loc":{"start":{"line":49,"column":12},"end":{"line":67,"column":13}},"type":"switch","locations":[{"start":{"line":50,"column":16},"end":{"line":52,"column":26}},{"start":{"line":53,"column":16},"end":{"line":55,"column":26}},{"start":{"line":56,"column":16},"end":{"line":58,"column":26}},{"start":{"line":59,"column":16},"end":{"line":61,"column":26}},{"start":{"line":62,"column":16},"end":{"line":64,"column":26}},{"start":{"line":65,"column":16},"end":{"line":66,"column":26}}],"line":49},"2":{"loc":{"start":{"line":69,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":83,"column":9}},{"start":{"line":69,"column":8},"end":{"line":83,"column":9}}],"line":69},"3":{"loc":{"start":{"line":72,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":13},"end":{"line":83,"column":9}},{"start":{"line":72,"column":13},"end":{"line":83,"column":9}}],"line":72},"4":{"loc":{"start":{"line":75,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":13},"end":{"line":83,"column":9}},{"start":{"line":75,"column":13},"end":{"line":83,"column":9}}],"line":75},"5":{"loc":{"start":{"line":78,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":13},"end":{"line":83,"column":9}},{"start":{"line":78,"column":13},"end":{"line":83,"column":9}}],"line":78},"6":{"loc":{"start":{"line":81,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":13},"end":{"line":83,"column":9}},{"start":{"line":81,"column":13},"end":{"line":83,"column":9}}],"line":81}},"s":{"0":1,"1":1,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":4,"14":4,"15":12,"16":12,"17":12,"18":12,"19":4,"20":4,"21":4,"22":4,"23":4,"24":4,"25":4,"26":4,"27":12,"28":0,"29":0,"30":12,"31":12,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":4,"40":0,"41":4,"42":4,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":4,"50":4,"51":4,"52":12,"53":4,"54":15,"55":3,"56":4,"57":13,"58":4,"59":1},"f":{"0":4,"1":4,"2":4,"3":4,"4":15,"5":3,"6":4,"7":13,"8":4},"b":{"0":[4,0],"1":[0,12,0,0,0,0],"2":[0,4],"3":[4,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/plato.ts","sources":["/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/plato.ts"],"names":[],"mappings":"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","sourcesContent":["import {Food} from \"./alimento\";\n/**\n * Distintas categorías que puede tener un plato\n */\ntype Categoria = \"Entrante\" | \"Primer plato\" | \"Segundo Plato\" | \"Postre\";\n\nexport class Plate {\n  private TotalComposition: number[];\n  private TotalPrice: number;\n  private Predominante: string;\n  /**\n   * Constructor de la clase\n   * @param category La categoria del plato\n   * @param foods Lista de alimentos que componen el plato\n   * @param amount Composición nutricional de cada alimento\n   */\n  constructor(private readonly category: Categoria,\n    private readonly foods: Food[],\n    private readonly amount: number[]) {\n    if (this.foods.length==this.amount.length) {\n      this.composition();\n    }\n    this.addPrice();\n    this.foodPredominante();\n  }\n\n  /**\n   * Composición nutricional del plato. Suma la composición nutricional\n   * de los alimentos\n   */\n  private composition() {\n    let calorias: number = 0;\n    let proteinas: number = 0;\n    let hidratos: number = 0;\n    let lipidos: number = 0;\n    for (let i = 0; i < this.foods.length; i++) {\n      calorias += this.foods[i].getNutrients()[0] * this.amount[i] / 100;\n      proteinas += this.foods[i].getNutrients()[1] * this.amount[i] / 100;\n      hidratos += this.foods[i].getNutrients()[2] * this.amount[i] / 100;\n      lipidos += this.foods[i].getNutrients()[3] * this.amount[i] / 100;\n    }\n    this.TotalComposition = [Math.trunc(calorias),\n      Math.trunc(proteinas), Math.trunc(hidratos), Math.trunc(lipidos)];\n  }\n\n  /**\n   * Nos permite determinar el grupo de alimento predominante del plato\n   */\n  private foodPredominante() {\n    let g1: number = 0;\n    let g2: number = 0;\n    let g3: number = 0;\n    let g4: number = 0;\n    let g5: number = 0;\n    for (let i = 0; i < this.foods.length; i++) {\n      switch (this.foods[i].getGroup()) {\n        case 'Grupo1':\n          g1++;\n          break;\n        case 'Grupo2':\n          g2++;\n          break;\n        case 'Grupo3':\n          g3++;\n          break;\n        case 'Grupo4':\n          g4++;\n          break;\n        case 'Grupo5':\n          g5++;\n          break;\n        default:\n          break;\n      }\n    }\n    if (g1 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo1\";\n    } else if (g2 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo2\";\n    } else if (g3 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo3\";\n    } else if (g4 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo4\";\n    } else if (g5 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo5\";\n    }\n  }\n\n  /**\n   * Sumamos el precio de los alimentos, para determinar el precio del plato.\n   */\n  private addPrice() {\n    let acumulador: number = 0;\n    for (let i = 0; i < this.foods.length; i++) {\n      acumulador += this.foods[i].getPrice();\n    }\n    this.TotalPrice = acumulador;\n  }\n  /**\n   * getter de la categoria del plato\n   * @returns retorna la categoría del plato\n   */\n  getCategory() {\n    return this.category;\n  }\n  /**\n   * getter de la categoria del plato\n   * @returns retorna la categoría del plato\n   */\n  getFood(): Food[] {\n    return this.foods;\n  }\n  /**\n * Obtenemos la suma de los precios de todos lo alimentos de los que se\n * compone el plato\n * @returns Precio del plato\n */\n  public getPrice() : number {\n    return this.TotalPrice;\n  }\n\n  /**\n   * Obtenemos la composición nutricional del plato\n   * @returns Composición nutricional del plato\n   */\n  public getComposition() : number[] {\n    return this.TotalComposition;\n  }\n\n  /**\n   * Obtenemos el grupo predominante de alimentos que componen el plato\n   * @returns El nombre del grupo predominante\n   */\n  public getPredominant() : string {\n    return this.Predominante;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ca723ac46b238fb4a7c01b6fd9013bfb19c3a146","contentHash":"1e4377e370263ebc537f6a0881dd93e913d004dad18fbabb9b9b7fd71adfb9dd"},"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/carta.ts":{"path":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/carta.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":9,"column":8},"end":{"line":9,"column":27}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":26}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"6":{"start":{"line":28,"column":0},"end":{"line":28,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":31},"end":{"line":11,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":15},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":16},"end":{"line":26,"column":5}},"line":24}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":2,"4":1,"5":1,"6":1},"f":{"0":2,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/carta.ts","sources":["/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/carta.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,KAAK;IAChB,YAAmB,KAAY,EAAmB,MAAc;QAA7C,UAAK,GAAL,KAAK,CAAO;QAAmB,WAAM,GAAN,MAAM,CAAQ;IAChE,CAAC;IACD;;;OAGG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD;;;;OAIG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;CACF;AAlBD,sBAkBC","sourcesContent":["import {Menu} from \"./menu\";\nimport {Plate} from \"./plato\";\n/**\n * Clase que representa una Carta respecto a una serie de munús prediseñados\n */\nexport class Carta {\n  constructor(public menus:Menu[], private readonly platos:Plate[]) {\n  }\n  /**\n   * getter de los menus que contiene la carta\n   * @returns Menus de la carta\n   */\n  getMenus() {\n    return this.menus;\n  }\n  /**\n   * getter de platos con los que se pueden hacer\n   * menus prsonalizados\n   * @returns Platos de la carta\n   */\n  getPlatos() {\n    return this.platos;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"da0d31771932a43a2e0647dd872931cf9a0b361e","contentHash":"beebf4502d38248ae1c49ba9a510d42a0eed550b30397b2d83f7725f7131e363"}}