{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/database/aliments.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/database/aliments.ts"],"names":[],"mappings":"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","sourcesContent":["\n/* eslint-disable no-unused-vars */\nimport {Food} from \"../alimento\";\n\nexport const Almendrado: Food = new Food('Almendrado',\n    'España', [431, 9, 57, 18.1], 5.05, 'Grupo1');\n\nexport const Pollo: Food = new Food('Pollo',\n    'España', [167, 20, 0, 9.7], 4.3, 'Grupo1');\n\nexport const CerdoChuleta: Food = new Food('Cerdo chuleta',\n    'España', [327, 15.4, 0, 29.5], 6.98, 'Grupo1');\n\nexport const Atun: Food = new Food('Atun',\n    'España', [200, 23, 0, 12], 10.90, 'Grupo1');\n\nexport const Salmon: Food = new Food('Salmon',\n    'España', [182, 18.4, 0, 12], 8.99, 'Grupo1');\n\nexport const HuevoGallina: Food = new Food('Huevo de gallina',\n    'España', [153, 12.5, 0.7, 11.1], 3.19, 'Grupo1');\n\nexport const Garbanzos: Food = new Food('Garbanzos',\n    'España', [332, 21.3, 49.6, 5.4], 2.05, 'Grupo1');\n\nexport const Tofu: Food = new Food('Tofu',\n    'España', [74, 8.1, 0.7, 4.2], 6.50, 'Grupo1');\n\nexport const NuecesConCascara: Food = new Food('Nueces con cascara',\n    'España', [611, 14, 3.3, 59], 6.84, 'Grupo1');\n\nexport const CocoRallado: Food = new Food('Coco rallado',\n    'España', [373, 3.2, 3.7, 36], 3.29, 'Grupo1');\n\nexport const Lentejas: Food = new Food('Lentejas',\n    'España', [310, 24.3, 48.8, 1.9], 1.45, 'Grupo1');\n\nexport const TerneraChuleta: Food = new Food('Ternera, chuleta',\n    'España', [253, 17, 0, 20.5], 7.40, 'Grupo1');\n\nexport const Conejo: Food = new Food('Conejo',\n    'España', [133, 23, 0, 4.6], 5.95, 'Grupo1');\n\n\nexport const Ajo: Food = new Food('Ajo',\n    'España', [118, 5.3, 23, 0.3], 1.19, 'Grupo2');\n\nexport const Cebolla: Food = new Food('Cebolla',\n    'España', [33, 1.2, 7, 0], 2.55, 'Grupo2');\n\nexport const Lechuga: Food = new Food('Lechuga',\n    'España', [14, 1.34, 1.4, 0.2], 0.96, 'Grupo2');\n\nexport const PapasNuevas: Food = new Food('Papas',\n    'España', [77, 1.7, 16.1, 0.3], 1.33, 'Grupo2');\n\nexport const Setas: Food = new Food('Setas',\n    'España', [31, 1.8, 4, 0.3], 6.76, 'Grupo2');\n\nexport const Zanahoria: Food = new Food('Zanahoria',\n    'España', [40, 0.9, 7.3, 0.2], 0.69, 'Grupo2');\n\nexport const Tomate: Food = new Food('Tomate',\n    'España', [22, 1, 3.5, 0.11], 1.99, 'Grupo2');\n\nexport const Puerro: Food = new Food('Puerro',\n    'España', [48, 2, 7.5, 0.4], 6.98, 'Grupo2');\n\nexport const Pepino: Food = new Food('Pepino',\n    'España', [13, 0.7, 1.9, 0.2], 1.39, 'Grupo2');\n\nexport const Repollo: Food = new Food('Repollo',\n    'España', [36, 3.3, 3.4, 0.4], 0.99, 'Grupo2');\n\nexport const Calabacin: Food = new Food('Calabacin',\n    'España', [14, 0.6, 2.2, 0.2], 1.45, 'Grupo2');\n\nexport const Champinion: Food = new Food('Champiñon',\n    'España', [31, 1.8, 4, 0.3], 5, 'Grupo2');\n\nexport const PimientoVerde: Food = new Food('Pimiento Verde',\n    'España', [23, 0.9, 3.7, 0.2], 2.58, 'Grupo2');\n\nexport const PimientoRojo: Food = new Food('Pimiento Rojo',\n    'España', [37, 1, 6.4, 0.4], 1.75, 'Grupo2');\n\n\nexport const LecheCabra: Food = new Food('Lecha de cabra',\n    'España', [69, 3.4, 4.5, 3.9], 0.64, 'Grupo3');\n\nexport const Mantequilla: Food = new Food('Mantequilla',\n    'España', [749, 0.6, 0, 83], 1.7, 'Grupo3');\n\nexport const FlanHuevo: Food = new Food('Flan de huevo',\n    'España', [127, 4.9, 21.6, 2.3], 2.7, 'Grupo3');\n\nexport const Nata: Food = new Food('Nata',\n    'España', [448, 1.5, 2, 48.2], 3.45, 'Grupo3');\n\nexport const QuesoBurgos: Food = new Food('Queso de burgos',\n    'España', [175, 15, 4, 11], 6.95, 'Grupo3');\n\nexport const YogurLiquidoSabores: Food = new Food('Yogur liquido de sabores',\n    'España', [75, 2.9, 12.8, 1.4], 2.38, 'Grupo3');\n\nexport const MousseChocolate: Food = new Food('Mousse de chocolate',\n    'España', [190, 5.1, 22.7, 8.8], 2.63, 'Grupo3');\n\nexport const YogurNaturalEntero: Food = new Food('Yogur entero natural',\n    'España', [57, 3.7, 4.4, 2.7], 1.99, 'Grupo3');\n\nexport const QuesoGouda: Food = new Food('Queso Gouda',\n    'España', [331, 25.5, 0, 25.4], 5.35, 'Grupo3');\n\nexport const Helado: Food = new Food('Helado',\n    'España', [221, 4.5, 25.4, 10.1], 16.12, 'Grupo3');\n\nexport const BaticoCacao: Food = new Food('Batido de cacao',\n    'España', [98, 3.8, 10.9, 4.3], 0.85, 'Grupo3');\n\n\nexport const Fresa: Food = new Food('Fresa',\n    'España', [40, 0.7, 7, 0.5], 2.5, 'Grupo5');\n\nexport const Kiwi: Food = new Food('Kiwi',\n    'España', [55, 1.1, 10.6, 0.5], 2.45, 'Grupo5');\n\nexport const Limon: Food = new Food('Limon',\n    'España', [44, 0.7, 9, 0.4], 1.61, 'Grupo5');\n\nexport const Manzana: Food = new Food('Manzana',\n    'España', [53, 0.3, 12, 0], 1.19, 'Grupo5');\n\nexport const Melon: Food = new Food('Melon',\n    'España', [28, 0.6, 6, 0], 2.35, 'Grupo5');\n\nexport const Naranja: Food = new Food('Naranja',\n    'España', [42, 0.8, 8.6, 0], 0.8, 'Grupo5');\n\nexport const Piña: Food = new Food('Piña',\n    'España', [50, 0.5, 11.5, 0], 0.88, 'Grupo5');\n\nexport const Platano: Food = new Food('Platano',\n    'España', [94, 1.2, 20, 0.3], 1.99, 'Grupo5');\n\nexport const Pera: Food = new Food('Pera',\n    'España', [49, 0.4, 10.6, 0], 1.33, 'Grupo5');\n\nexport const Membrillo: Food = new Food('Membrillo',\n    'España', [42, 0.4, 6.8, 0], 2.25, 'Grupo5');\n\nexport const Aguacate: Food = new Food('Aguacate',\n    'España', [141, 1.5, 5.9, 12], 4, 'Grupo5');\n\nexport const Mango: Food = new Food('Mango',\n    'España', [67, 0.7, 14.1, 0.2], 2.25, 'Grupo5');\n\n\nexport const PanBlanco: Food = new Food('Pan blanco de molde',\n    'España', [287, 8, 52, 4.2], 4.33, 'Grupo4');\n\nexport const PanTostado: Food = new Food('Pan blanco tostado',\n    'España', [309, 10.1, 59.2, 2.5], 5.90, 'Grupo4');\n\nexport const PanRallado: Food = new Food('Pan rallado',\n    'España', [277, 7.8, 58, 1], 8.75, 'Grupo4');\n\nexport const Pasta: Food = new Food('Pasta',\n    'España', [375, 12, 75.8, 1.8], 2.98, 'Grupo4');\n"]}