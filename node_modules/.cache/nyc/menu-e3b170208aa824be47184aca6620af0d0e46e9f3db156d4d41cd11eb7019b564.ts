"use strict";function cov_1ial2p0vv0(){var path="/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts";var hash="ee8108a443288a4a92e2a204e0d27e1a95fd10a7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:22}},"2":{start:{line:12,column:8},end:{line:12,column:27}},"3":{start:{line:19,column:27},end:{line:19,column:32}},"4":{start:{line:20,column:30},end:{line:20,column:35}},"5":{start:{line:21,column:31},end:{line:21,column:36}},"6":{start:{line:22,column:25},end:{line:22,column:30}},"7":{start:{line:23,column:23},end:{line:23,column:24}},"8":{start:{line:26,column:8},end:{line:43,column:11}},"9":{start:{line:27,column:12},end:{line:30,column:13}},"10":{start:{line:28,column:16},end:{line:28,column:27}},"11":{start:{line:29,column:16},end:{line:29,column:36}},"12":{start:{line:31,column:12},end:{line:34,column:13}},"13":{start:{line:32,column:16},end:{line:32,column:39}},"14":{start:{line:33,column:16},end:{line:33,column:27}},"15":{start:{line:35,column:12},end:{line:38,column:13}},"16":{start:{line:36,column:16},end:{line:36,column:40}},"17":{start:{line:37,column:16},end:{line:37,column:27}},"18":{start:{line:39,column:12},end:{line:42,column:13}},"19":{start:{line:40,column:16},end:{line:40,column:34}},"20":{start:{line:41,column:16},end:{line:41,column:27}},"21":{start:{line:44,column:8},end:{line:50,column:9}},"22":{start:{line:45,column:12},end:{line:45,column:33}},"23":{start:{line:46,column:12},end:{line:46,column:25}},"24":{start:{line:49,column:12},end:{line:49,column:24}},"25":{start:{line:58,column:23},end:{line:58,column:24}},"26":{start:{line:59,column:24},end:{line:59,column:25}},"27":{start:{line:60,column:23},end:{line:60,column:24}},"28":{start:{line:61,column:22},end:{line:61,column:23}},"29":{start:{line:62,column:31},end:{line:62,column:33}},"30":{start:{line:63,column:8},end:{line:68,column:9}},"31":{start:{line:63,column:21},end:{line:63,column:22}},"32":{start:{line:64,column:12},end:{line:64,column:58}},"33":{start:{line:65,column:12},end:{line:65,column:59}},"34":{start:{line:66,column:12},end:{line:66,column:58}},"35":{start:{line:67,column:12},end:{line:67,column:57}},"36":{start:{line:69,column:8},end:{line:69,column:68}},"37":{start:{line:70,column:8},end:{line:70,column:32}},"38":{start:{line:78,column:36},end:{line:78,column:38}},"39":{start:{line:79,column:8},end:{line:81,column:9}},"40":{start:{line:79,column:21},end:{line:79,column:22}},"41":{start:{line:80,column:12},end:{line:80,column:69}},"42":{start:{line:82,column:8},end:{line:82,column:35}},"43":{start:{line:90,column:21},end:{line:90,column:22}},"44":{start:{line:91,column:8},end:{line:93,column:9}},"45":{start:{line:91,column:21},end:{line:91,column:22}},"46":{start:{line:92,column:12},end:{line:92,column:47}},"47":{start:{line:94,column:8},end:{line:94,column:22}},"48":{start:{line:101,column:8},end:{line:104,column:9}},"49":{start:{line:101,column:21},end:{line:101,column:22}},"50":{start:{line:102,column:12},end:{line:102,column:89}},"51":{start:{line:103,column:12},end:{line:103,column:51}},"52":{start:{line:107,column:0},end:{line:107,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:23},end:{line:13,column:5}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:20},end:{line:51,column:5}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:26,column:27},end:{line:26,column:28}},loc:{start:{line:26,column:38},end:{line:43,column:9}},line:26},"3":{name:"(anonymous_3)",decl:{start:{line:57,column:4},end:{line:57,column:5}},loc:{start:{line:57,column:33},end:{line:71,column:5}},line:57},"4":{name:"(anonymous_4)",decl:{start:{line:77,column:4},end:{line:77,column:5}},loc:{start:{line:77,column:29},end:{line:83,column:5}},line:77},"5":{name:"(anonymous_5)",decl:{start:{line:89,column:4},end:{line:89,column:5}},loc:{start:{line:89,column:18},end:{line:95,column:5}},line:89},"6":{name:"(anonymous_6)",decl:{start:{line:100,column:4},end:{line:100,column:5}},loc:{start:{line:100,column:12},end:{line:105,column:5}},line:100}},branchMap:{"0":{loc:{start:{line:27,column:12},end:{line:30,column:13}},type:"if",locations:[{start:{line:27,column:12},end:{line:30,column:13}},{start:{line:27,column:12},end:{line:30,column:13}}],line:27},"1":{loc:{start:{line:27,column:16},end:{line:27,column:74}},type:"binary-expr",locations:[{start:{line:27,column:16},end:{line:27,column:49}},{start:{line:27,column:53},end:{line:27,column:74}}],line:27},"2":{loc:{start:{line:31,column:12},end:{line:34,column:13}},type:"if",locations:[{start:{line:31,column:12},end:{line:34,column:13}},{start:{line:31,column:12},end:{line:34,column:13}}],line:31},"3":{loc:{start:{line:31,column:16},end:{line:31,column:81}},type:"binary-expr",locations:[{start:{line:31,column:16},end:{line:31,column:53}},{start:{line:31,column:57},end:{line:31,column:81}}],line:31},"4":{loc:{start:{line:35,column:12},end:{line:38,column:13}},type:"if",locations:[{start:{line:35,column:12},end:{line:38,column:13}},{start:{line:35,column:12},end:{line:38,column:13}}],line:35},"5":{loc:{start:{line:35,column:16},end:{line:35,column:83}},type:"binary-expr",locations:[{start:{line:35,column:16},end:{line:35,column:54}},{start:{line:35,column:58},end:{line:35,column:83}}],line:35},"6":{loc:{start:{line:39,column:12},end:{line:42,column:13}},type:"if",locations:[{start:{line:39,column:12},end:{line:42,column:13}},{start:{line:39,column:12},end:{line:42,column:13}}],line:39},"7":{loc:{start:{line:39,column:16},end:{line:39,column:70}},type:"binary-expr",locations:[{start:{line:39,column:16},end:{line:39,column:47}},{start:{line:39,column:51},end:{line:39,column:70}}],line:39},"8":{loc:{start:{line:44,column:8},end:{line:50,column:9}},type:"if",locations:[{start:{line:44,column:8},end:{line:50,column:9}},{start:{line:44,column:8},end:{line:50,column:9}}],line:44}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts",sources:["/home/usuario/practica7/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts"],names:[],mappings:"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",sourcesContent:["import {Plate} from \"./plato\";\n\n/**\n * Lista con al menos tres platos\n */\nexport type menu=[x:Plate, y:Plate, z:Plate, ...dimensiones:Plate[]];\n/**\n * Clase con la que representar el menu\n */\nexport class Menu {\n  /**\n   * @param menus Lista de platos (minimmo 3 platos por menu)\n   */\n  constructor(private readonly menus:menu) {\n  }\n  /**\n   * Comprueba que el menu cumple con almenos 3 categorias diferentes\n   * @returns Verdadero o falso si se cumple o no la condici\xF3n\n   */\n  comprobarMenu(): boolean {\n    let flagEntrante=false;\n    let flagPrimerplato=false;\n    let flagSegundoPlato=false;\n    let flagPostre=false;\n    let contador=0;\n    // Si el contador es 3 o mayor hay 3 categorias diferentes como minimo por\n    // lo que es valido\n    this.menus.forEach((plato) => {\n      if (plato.getCategory()== \"Entrante\" && flagEntrante==false) {\n        contador++;\n        flagEntrante=true;\n      }\n      if (plato.getCategory()== \"Primer plato\" && flagPrimerplato==false) {\n        flagPrimerplato=true;\n        contador++;\n      }\n      if (plato.getCategory()== \"Segundo Plato\" && flagSegundoPlato==false) {\n        flagSegundoPlato=true;\n        contador++;\n      }\n      if (plato.getCategory()== \"Postre\" && flagPostre==false) {\n        flagPostre=true;\n        contador++;\n      }\n    });\n    if (contador<3) {\n      console.log(\"error\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * M\xE9todo para calcular la composicion total de los platos\n   * que conforman el menu\n   * @returns retorna la composicion total del menu\n   */\n  composicionNutricionalMenu() {\n    let calorias=0;\n    let proteinas= 0;\n    let hidratos= 0;\n    let lipidos= 0;\n    let composicionTotal: number[] = [];\n    for (let i = 0; i < this.menus.length; i++) {\n      calorias+=this.menus[i].getComposition()[0];\n      proteinas+= this.menus[i].getComposition()[1];\n      hidratos+= this.menus[i].getComposition()[2];\n      lipidos+= this.menus[i].getComposition()[3];\n    }\n    composicionTotal = [calorias, proteinas, hidratos, lipidos];\n    return composicionTotal;\n  }\n  /**\n   * M\xE9todo para retornar los grupos de alimentos predominantes de\n   * cada plato que contiene el menu\n   * @returns retorna la lista de grupo de alimentos\n   */\n  listadoGruposAlimentos(): string[] {\n    const listaGrupoAlimentos: string[] = [];\n    for (let i = 0; i < this.menus.length; i++) {\n      listaGrupoAlimentos.push(this.menus[i].getPredominant());\n    }\n    return listaGrupoAlimentos;\n  }\n  /**\n   * M\xE9todo que retorna la suma del precio de cada\n   * plato que compone el menu\n   * @returns retorna el precio total del menu\n   */\n  precioTotal() {\n    let precio = 0;\n    for (let i = 0; i < this.menus.length; i++) {\n      precio+=this.menus[i].getPrice();\n    }\n    return precio;\n  }\n  /**\n   * Write para imprimir todos los platos de un menu, con\n   * los ingredientes de cada uno\n   */\n  write() {\n    for (let i = 0; i < this.menus.length; i++) {\n      console.log('Plato N\xBA '+(i+1)+' es un '+this.menus[i].getCategory());\n      console.table(this.menus[i].getFood());\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ee8108a443288a4a92e2a204e0d27e1a95fd10a7"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ial2p0vv0=function(){return actualCoverage;};}return actualCoverage;}cov_1ial2p0vv0();cov_1ial2p0vv0().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1ial2p0vv0().s[1]++;exports.Menu=void 0;/**
 * Clase con la que representar el menu
 */class Menu{/**
     * @param menus Lista de platos (minimmo 3 platos por menu)
     */constructor(menus){cov_1ial2p0vv0().f[0]++;cov_1ial2p0vv0().s[2]++;this.menus=menus;}/**
     * Comprueba que el menu cumple con almenos 3 categorias diferentes
     * @returns Verdadero o falso si se cumple o no la condición
     */comprobarMenu(){cov_1ial2p0vv0().f[1]++;let flagEntrante=(cov_1ial2p0vv0().s[3]++,false);let flagPrimerplato=(cov_1ial2p0vv0().s[4]++,false);let flagSegundoPlato=(cov_1ial2p0vv0().s[5]++,false);let flagPostre=(cov_1ial2p0vv0().s[6]++,false);let contador=(cov_1ial2p0vv0().s[7]++,0);// Si el contador es 3 o mayor hay 3 categorias diferentes como minimo por
// lo que es valido
cov_1ial2p0vv0().s[8]++;this.menus.forEach(plato=>{cov_1ial2p0vv0().f[2]++;cov_1ial2p0vv0().s[9]++;if((cov_1ial2p0vv0().b[1][0]++,plato.getCategory()=="Entrante")&&(cov_1ial2p0vv0().b[1][1]++,flagEntrante==false)){cov_1ial2p0vv0().b[0][0]++;cov_1ial2p0vv0().s[10]++;contador++;cov_1ial2p0vv0().s[11]++;flagEntrante=true;}else{cov_1ial2p0vv0().b[0][1]++;}cov_1ial2p0vv0().s[12]++;if((cov_1ial2p0vv0().b[3][0]++,plato.getCategory()=="Primer plato")&&(cov_1ial2p0vv0().b[3][1]++,flagPrimerplato==false)){cov_1ial2p0vv0().b[2][0]++;cov_1ial2p0vv0().s[13]++;flagPrimerplato=true;cov_1ial2p0vv0().s[14]++;contador++;}else{cov_1ial2p0vv0().b[2][1]++;}cov_1ial2p0vv0().s[15]++;if((cov_1ial2p0vv0().b[5][0]++,plato.getCategory()=="Segundo Plato")&&(cov_1ial2p0vv0().b[5][1]++,flagSegundoPlato==false)){cov_1ial2p0vv0().b[4][0]++;cov_1ial2p0vv0().s[16]++;flagSegundoPlato=true;cov_1ial2p0vv0().s[17]++;contador++;}else{cov_1ial2p0vv0().b[4][1]++;}cov_1ial2p0vv0().s[18]++;if((cov_1ial2p0vv0().b[7][0]++,plato.getCategory()=="Postre")&&(cov_1ial2p0vv0().b[7][1]++,flagPostre==false)){cov_1ial2p0vv0().b[6][0]++;cov_1ial2p0vv0().s[19]++;flagPostre=true;cov_1ial2p0vv0().s[20]++;contador++;}else{cov_1ial2p0vv0().b[6][1]++;}});cov_1ial2p0vv0().s[21]++;if(contador<3){cov_1ial2p0vv0().b[8][0]++;cov_1ial2p0vv0().s[22]++;console.log("error");cov_1ial2p0vv0().s[23]++;return false;}else{cov_1ial2p0vv0().b[8][1]++;cov_1ial2p0vv0().s[24]++;return true;}}/**
     * Método para calcular la composicion total de los platos
     * que conforman el menu
     * @returns retorna la composicion total del menu
     */composicionNutricionalMenu(){cov_1ial2p0vv0().f[3]++;let calorias=(cov_1ial2p0vv0().s[25]++,0);let proteinas=(cov_1ial2p0vv0().s[26]++,0);let hidratos=(cov_1ial2p0vv0().s[27]++,0);let lipidos=(cov_1ial2p0vv0().s[28]++,0);let composicionTotal=(cov_1ial2p0vv0().s[29]++,[]);cov_1ial2p0vv0().s[30]++;for(let i=(cov_1ial2p0vv0().s[31]++,0);i<this.menus.length;i++){cov_1ial2p0vv0().s[32]++;calorias+=this.menus[i].getComposition()[0];cov_1ial2p0vv0().s[33]++;proteinas+=this.menus[i].getComposition()[1];cov_1ial2p0vv0().s[34]++;hidratos+=this.menus[i].getComposition()[2];cov_1ial2p0vv0().s[35]++;lipidos+=this.menus[i].getComposition()[3];}cov_1ial2p0vv0().s[36]++;composicionTotal=[calorias,proteinas,hidratos,lipidos];cov_1ial2p0vv0().s[37]++;return composicionTotal;}/**
     * Método para retornar los grupos de alimentos predominantes de
     * cada plato que contiene el menu
     * @returns retorna la lista de grupo de alimentos
     */listadoGruposAlimentos(){cov_1ial2p0vv0().f[4]++;const listaGrupoAlimentos=(cov_1ial2p0vv0().s[38]++,[]);cov_1ial2p0vv0().s[39]++;for(let i=(cov_1ial2p0vv0().s[40]++,0);i<this.menus.length;i++){cov_1ial2p0vv0().s[41]++;listaGrupoAlimentos.push(this.menus[i].getPredominant());}cov_1ial2p0vv0().s[42]++;return listaGrupoAlimentos;}/**
     * Método que retorna la suma del precio de cada
     * plato que compone el menu
     * @returns retorna el precio total del menu
     */precioTotal(){cov_1ial2p0vv0().f[5]++;let precio=(cov_1ial2p0vv0().s[43]++,0);cov_1ial2p0vv0().s[44]++;for(let i=(cov_1ial2p0vv0().s[45]++,0);i<this.menus.length;i++){cov_1ial2p0vv0().s[46]++;precio+=this.menus[i].getPrice();}cov_1ial2p0vv0().s[47]++;return precio;}/**
     * Write para imprimir todos los platos de un menu, con
     * los ingredientes de cada uno
     */write(){cov_1ial2p0vv0().f[6]++;cov_1ial2p0vv0().s[48]++;for(let i=(cov_1ial2p0vv0().s[49]++,0);i<this.menus.length;i++){cov_1ial2p0vv0().s[50]++;console.log('Plato Nº '+(i+1)+' es un '+this.menus[i].getCategory());cov_1ial2p0vv0().s[51]++;console.table(this.menus[i].getFood());}}}cov_1ial2p0vv0().s[52]++;exports.Menu=Menu;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,