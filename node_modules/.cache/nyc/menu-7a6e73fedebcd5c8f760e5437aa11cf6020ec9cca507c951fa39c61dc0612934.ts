"use strict";function cov_76icwqad3(){var path="/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts";var hash="3fed3f395566e91c4af2aba82898d877601cb541";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:22}},"2":{start:{line:12,column:8},end:{line:12,column:27}},"3":{start:{line:19,column:27},end:{line:19,column:32}},"4":{start:{line:20,column:30},end:{line:20,column:35}},"5":{start:{line:21,column:31},end:{line:21,column:36}},"6":{start:{line:22,column:25},end:{line:22,column:30}},"7":{start:{line:23,column:23},end:{line:23,column:24}},"8":{start:{line:26,column:8},end:{line:43,column:11}},"9":{start:{line:27,column:12},end:{line:30,column:13}},"10":{start:{line:28,column:16},end:{line:28,column:27}},"11":{start:{line:29,column:16},end:{line:29,column:36}},"12":{start:{line:31,column:12},end:{line:34,column:13}},"13":{start:{line:32,column:16},end:{line:32,column:39}},"14":{start:{line:33,column:16},end:{line:33,column:27}},"15":{start:{line:35,column:12},end:{line:38,column:13}},"16":{start:{line:36,column:16},end:{line:36,column:40}},"17":{start:{line:37,column:16},end:{line:37,column:27}},"18":{start:{line:39,column:12},end:{line:42,column:13}},"19":{start:{line:40,column:16},end:{line:40,column:34}},"20":{start:{line:41,column:16},end:{line:41,column:27}},"21":{start:{line:44,column:8},end:{line:49,column:9}},"22":{start:{line:45,column:12},end:{line:45,column:25}},"23":{start:{line:48,column:12},end:{line:48,column:24}},"24":{start:{line:57,column:23},end:{line:57,column:24}},"25":{start:{line:58,column:24},end:{line:58,column:25}},"26":{start:{line:59,column:23},end:{line:59,column:24}},"27":{start:{line:60,column:22},end:{line:60,column:23}},"28":{start:{line:61,column:31},end:{line:61,column:33}},"29":{start:{line:62,column:8},end:{line:67,column:9}},"30":{start:{line:62,column:21},end:{line:62,column:22}},"31":{start:{line:63,column:12},end:{line:63,column:58}},"32":{start:{line:64,column:12},end:{line:64,column:59}},"33":{start:{line:65,column:12},end:{line:65,column:58}},"34":{start:{line:66,column:12},end:{line:66,column:57}},"35":{start:{line:68,column:8},end:{line:68,column:68}},"36":{start:{line:69,column:8},end:{line:69,column:32}},"37":{start:{line:77,column:36},end:{line:77,column:38}},"38":{start:{line:78,column:8},end:{line:80,column:9}},"39":{start:{line:78,column:21},end:{line:78,column:22}},"40":{start:{line:79,column:12},end:{line:79,column:69}},"41":{start:{line:81,column:8},end:{line:81,column:35}},"42":{start:{line:89,column:21},end:{line:89,column:22}},"43":{start:{line:90,column:8},end:{line:92,column:9}},"44":{start:{line:90,column:21},end:{line:90,column:22}},"45":{start:{line:91,column:12},end:{line:91,column:47}},"46":{start:{line:93,column:8},end:{line:93,column:33}},"47":{start:{line:100,column:18},end:{line:100,column:20}},"48":{start:{line:101,column:8},end:{line:103,column:9}},"49":{start:{line:101,column:21},end:{line:101,column:22}},"50":{start:{line:102,column:12},end:{line:102,column:50}},"51":{start:{line:104,column:8},end:{line:104,column:19}},"52":{start:{line:107,column:0},end:{line:107,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:23},end:{line:13,column:5}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:20},end:{line:50,column:5}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:26,column:27},end:{line:26,column:28}},loc:{start:{line:26,column:38},end:{line:43,column:9}},line:26},"3":{name:"(anonymous_3)",decl:{start:{line:56,column:4},end:{line:56,column:5}},loc:{start:{line:56,column:33},end:{line:70,column:5}},line:56},"4":{name:"(anonymous_4)",decl:{start:{line:76,column:4},end:{line:76,column:5}},loc:{start:{line:76,column:29},end:{line:82,column:5}},line:76},"5":{name:"(anonymous_5)",decl:{start:{line:88,column:4},end:{line:88,column:5}},loc:{start:{line:88,column:18},end:{line:94,column:5}},line:88},"6":{name:"(anonymous_6)",decl:{start:{line:99,column:4},end:{line:99,column:5}},loc:{start:{line:99,column:14},end:{line:105,column:5}},line:99}},branchMap:{"0":{loc:{start:{line:27,column:12},end:{line:30,column:13}},type:"if",locations:[{start:{line:27,column:12},end:{line:30,column:13}},{start:{line:27,column:12},end:{line:30,column:13}}],line:27},"1":{loc:{start:{line:27,column:16},end:{line:27,column:74}},type:"binary-expr",locations:[{start:{line:27,column:16},end:{line:27,column:49}},{start:{line:27,column:53},end:{line:27,column:74}}],line:27},"2":{loc:{start:{line:31,column:12},end:{line:34,column:13}},type:"if",locations:[{start:{line:31,column:12},end:{line:34,column:13}},{start:{line:31,column:12},end:{line:34,column:13}}],line:31},"3":{loc:{start:{line:31,column:16},end:{line:31,column:81}},type:"binary-expr",locations:[{start:{line:31,column:16},end:{line:31,column:53}},{start:{line:31,column:57},end:{line:31,column:81}}],line:31},"4":{loc:{start:{line:35,column:12},end:{line:38,column:13}},type:"if",locations:[{start:{line:35,column:12},end:{line:38,column:13}},{start:{line:35,column:12},end:{line:38,column:13}}],line:35},"5":{loc:{start:{line:35,column:16},end:{line:35,column:83}},type:"binary-expr",locations:[{start:{line:35,column:16},end:{line:35,column:54}},{start:{line:35,column:58},end:{line:35,column:83}}],line:35},"6":{loc:{start:{line:39,column:12},end:{line:42,column:13}},type:"if",locations:[{start:{line:39,column:12},end:{line:42,column:13}},{start:{line:39,column:12},end:{line:42,column:13}}],line:39},"7":{loc:{start:{line:39,column:16},end:{line:39,column:70}},type:"binary-expr",locations:[{start:{line:39,column:16},end:{line:39,column:47}},{start:{line:39,column:51},end:{line:39,column:70}}],line:39},"8":{loc:{start:{line:44,column:8},end:{line:49,column:9}},type:"if",locations:[{start:{line:44,column:8},end:{line:49,column:9}},{start:{line:44,column:8},end:{line:49,column:9}}],line:44}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts",sources:["/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/menu.ts"],names:[],mappings:"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",sourcesContent:["import {Plate} from \"./plato\";\n\n/**\n * Lista con al menos tres platos\n */\nexport type menu=[x:Plate, y:Plate, z:Plate, ...dimensiones:Plate[]];\n/**\n * Clase con la que representar el menu\n */\nexport class Menu {\n  /**\n   * @param menus Lista de platos (minimmo 3 platos por menu)\n   */\n  constructor(private readonly menus:menu) {\n  }\n  /**\n   * Comprueba que el menu cumple con almenos 3 categorias diferentes\n   * @returns Verdadero o falso si se cumple o no la condici\xF3n\n   */\n  comprobarMenu(): boolean {\n    let flagEntrante=false;\n    let flagPrimerplato=false;\n    let flagSegundoPlato=false;\n    let flagPostre=false;\n    let contador=0;\n    // Si el contador es 3 o mayor hay 3 categorias diferentes como minimo por\n    // lo que es valido\n    this.menus.forEach((plato) => {\n      if (plato.getCategory()== \"Entrante\" && flagEntrante==false) {\n        contador++;\n        flagEntrante=true;\n      }\n      if (plato.getCategory()== \"Primer plato\" && flagPrimerplato==false) {\n        flagPrimerplato=true;\n        contador++;\n      }\n      if (plato.getCategory()== \"Segundo plato\" && flagSegundoPlato==false) {\n        flagSegundoPlato=true;\n        contador++;\n      }\n      if (plato.getCategory()== \"Postre\" && flagPostre==false) {\n        flagPostre=true;\n        contador++;\n      }\n    });\n    if (contador<3) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * M\xE9todo para calcular la composicion total de los platos\n   * que conforman el menu\n   * @returns retorna la composicion total del menu\n   */\n  composicionNutricionalMenu() {\n    let calorias=0;\n    let proteinas= 0;\n    let hidratos= 0;\n    let lipidos= 0;\n    let composicionTotal: number[] = [];\n    for (let i = 0; i < this.menus.length; i++) {\n      calorias+=this.menus[i].getComposition()[0];\n      proteinas+= this.menus[i].getComposition()[1];\n      hidratos+= this.menus[i].getComposition()[2];\n      lipidos+= this.menus[i].getComposition()[3];\n    }\n    composicionTotal = [calorias, proteinas, hidratos, lipidos];\n    return composicionTotal;\n  }\n  /**\n   * M\xE9todo para retornar los grupos de alimentos predominantes de\n   * cada plato que contiene el menu\n   * @returns retorna la lista de grupo de alimentos\n   */\n  listadoGruposAlimentos(): string[] {\n    const listaGrupoAlimentos: string[] = [];\n    for (let i = 0; i < this.menus.length; i++) {\n      listaGrupoAlimentos.push(this.menus[i].getPredominant());\n    }\n    return listaGrupoAlimentos;\n  }\n  /**\n   * M\xE9todo que retorna la suma del precio de cada\n   * plato que compone el menu\n   * @returns retorna el precio total del menu\n   */\n  precioTotal() {\n    let precio = 0;\n    for (let i = 0; i < this.menus.length; i++) {\n      precio+=this.menus[i].getPrice();\n    }\n    return precio.toFixed(2);\n  }\n  /**\n   * Write para imprimir todos los platos de un menu, con\n   * los ingredientes de cada uno\n   */\n  getInfo(): string {\n    let aux: string = '';\n    for (let i = 0; i < this.menus.length; i++) {\n      aux += this.menus[i].getInfo() + '\\n';\n    }\n    return aux;\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3fed3f395566e91c4af2aba82898d877601cb541"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_76icwqad3=function(){return actualCoverage;};}return actualCoverage;}cov_76icwqad3();cov_76icwqad3().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_76icwqad3().s[1]++;exports.Menu=void 0;/**
 * Clase con la que representar el menu
 */class Menu{/**
     * @param menus Lista de platos (minimmo 3 platos por menu)
     */constructor(menus){cov_76icwqad3().f[0]++;cov_76icwqad3().s[2]++;this.menus=menus;}/**
     * Comprueba que el menu cumple con almenos 3 categorias diferentes
     * @returns Verdadero o falso si se cumple o no la condición
     */comprobarMenu(){cov_76icwqad3().f[1]++;let flagEntrante=(cov_76icwqad3().s[3]++,false);let flagPrimerplato=(cov_76icwqad3().s[4]++,false);let flagSegundoPlato=(cov_76icwqad3().s[5]++,false);let flagPostre=(cov_76icwqad3().s[6]++,false);let contador=(cov_76icwqad3().s[7]++,0);// Si el contador es 3 o mayor hay 3 categorias diferentes como minimo por
// lo que es valido
cov_76icwqad3().s[8]++;this.menus.forEach(plato=>{cov_76icwqad3().f[2]++;cov_76icwqad3().s[9]++;if((cov_76icwqad3().b[1][0]++,plato.getCategory()=="Entrante")&&(cov_76icwqad3().b[1][1]++,flagEntrante==false)){cov_76icwqad3().b[0][0]++;cov_76icwqad3().s[10]++;contador++;cov_76icwqad3().s[11]++;flagEntrante=true;}else{cov_76icwqad3().b[0][1]++;}cov_76icwqad3().s[12]++;if((cov_76icwqad3().b[3][0]++,plato.getCategory()=="Primer plato")&&(cov_76icwqad3().b[3][1]++,flagPrimerplato==false)){cov_76icwqad3().b[2][0]++;cov_76icwqad3().s[13]++;flagPrimerplato=true;cov_76icwqad3().s[14]++;contador++;}else{cov_76icwqad3().b[2][1]++;}cov_76icwqad3().s[15]++;if((cov_76icwqad3().b[5][0]++,plato.getCategory()=="Segundo plato")&&(cov_76icwqad3().b[5][1]++,flagSegundoPlato==false)){cov_76icwqad3().b[4][0]++;cov_76icwqad3().s[16]++;flagSegundoPlato=true;cov_76icwqad3().s[17]++;contador++;}else{cov_76icwqad3().b[4][1]++;}cov_76icwqad3().s[18]++;if((cov_76icwqad3().b[7][0]++,plato.getCategory()=="Postre")&&(cov_76icwqad3().b[7][1]++,flagPostre==false)){cov_76icwqad3().b[6][0]++;cov_76icwqad3().s[19]++;flagPostre=true;cov_76icwqad3().s[20]++;contador++;}else{cov_76icwqad3().b[6][1]++;}});cov_76icwqad3().s[21]++;if(contador<3){cov_76icwqad3().b[8][0]++;cov_76icwqad3().s[22]++;return false;}else{cov_76icwqad3().b[8][1]++;cov_76icwqad3().s[23]++;return true;}}/**
     * Método para calcular la composicion total de los platos
     * que conforman el menu
     * @returns retorna la composicion total del menu
     */composicionNutricionalMenu(){cov_76icwqad3().f[3]++;let calorias=(cov_76icwqad3().s[24]++,0);let proteinas=(cov_76icwqad3().s[25]++,0);let hidratos=(cov_76icwqad3().s[26]++,0);let lipidos=(cov_76icwqad3().s[27]++,0);let composicionTotal=(cov_76icwqad3().s[28]++,[]);cov_76icwqad3().s[29]++;for(let i=(cov_76icwqad3().s[30]++,0);i<this.menus.length;i++){cov_76icwqad3().s[31]++;calorias+=this.menus[i].getComposition()[0];cov_76icwqad3().s[32]++;proteinas+=this.menus[i].getComposition()[1];cov_76icwqad3().s[33]++;hidratos+=this.menus[i].getComposition()[2];cov_76icwqad3().s[34]++;lipidos+=this.menus[i].getComposition()[3];}cov_76icwqad3().s[35]++;composicionTotal=[calorias,proteinas,hidratos,lipidos];cov_76icwqad3().s[36]++;return composicionTotal;}/**
     * Método para retornar los grupos de alimentos predominantes de
     * cada plato que contiene el menu
     * @returns retorna la lista de grupo de alimentos
     */listadoGruposAlimentos(){cov_76icwqad3().f[4]++;const listaGrupoAlimentos=(cov_76icwqad3().s[37]++,[]);cov_76icwqad3().s[38]++;for(let i=(cov_76icwqad3().s[39]++,0);i<this.menus.length;i++){cov_76icwqad3().s[40]++;listaGrupoAlimentos.push(this.menus[i].getPredominant());}cov_76icwqad3().s[41]++;return listaGrupoAlimentos;}/**
     * Método que retorna la suma del precio de cada
     * plato que compone el menu
     * @returns retorna el precio total del menu
     */precioTotal(){cov_76icwqad3().f[5]++;let precio=(cov_76icwqad3().s[42]++,0);cov_76icwqad3().s[43]++;for(let i=(cov_76icwqad3().s[44]++,0);i<this.menus.length;i++){cov_76icwqad3().s[45]++;precio+=this.menus[i].getPrice();}cov_76icwqad3().s[46]++;return precio.toFixed(2);}/**
     * Write para imprimir todos los platos de un menu, con
     * los ingredientes de cada uno
     */getInfo(){cov_76icwqad3().f[6]++;let aux=(cov_76icwqad3().s[47]++,'');cov_76icwqad3().s[48]++;for(let i=(cov_76icwqad3().s[49]++,0);i<this.menus.length;i++){cov_76icwqad3().s[50]++;aux+=this.menus[i].getInfo()+'\n';}cov_76icwqad3().s[51]++;return aux;}}cov_76icwqad3().s[52]++;exports.Menu=Menu;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby91bGwtZXNpdC1pbmYtZHNpLTIwLTIxLXByY3QwNy1tZW51LWRhdGFtb2RlbC1ncnVwby1pL3NyYy9tZW51LnRzIiwic291cmNlcyI6WyIvaG9tZS91c3VhcmlvL3VsbC1lc2l0LWluZi1kc2ktMjAtMjEtcHJjdDA3LW1lbnUtZGF0YW1vZGVsLWdydXBvLWkvc3JjL21lbnUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBTUE7O0dBRUc7QUFDSCxNQUFhLElBQUk7SUFDZjs7T0FFRztJQUNILFlBQTZCLEtBQVU7UUFBVixVQUFLLEdBQUwsS0FBSyxDQUFLO0lBQ3ZDLENBQUM7SUFDRDs7O09BR0c7SUFDSCxhQUFhO1FBQ1gsSUFBSSxZQUFZLEdBQUMsS0FBSyxDQUFDO1FBQ3ZCLElBQUksZUFBZSxHQUFDLEtBQUssQ0FBQztRQUMxQixJQUFJLGdCQUFnQixHQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLFVBQVUsR0FBQyxLQUFLLENBQUM7UUFDckIsSUFBSSxRQUFRLEdBQUMsQ0FBQyxDQUFDO1FBQ2YsMEVBQTBFO1FBQzFFLG1CQUFtQjtRQUNuQixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQzNCLElBQUksS0FBSyxDQUFDLFdBQVcsRUFBRSxJQUFHLFVBQVUsSUFBSSxZQUFZLElBQUUsS0FBSyxFQUFFO2dCQUMzRCxRQUFRLEVBQUUsQ0FBQztnQkFDWCxZQUFZLEdBQUMsSUFBSSxDQUFDO2FBQ25CO1lBQ0QsSUFBSSxLQUFLLENBQUMsV0FBVyxFQUFFLElBQUcsY0FBYyxJQUFJLGVBQWUsSUFBRSxLQUFLLEVBQUU7Z0JBQ2xFLGVBQWUsR0FBQyxJQUFJLENBQUM7Z0JBQ3JCLFFBQVEsRUFBRSxDQUFDO2FBQ1o7WUFDRCxJQUFJLEtBQUssQ0FBQyxXQUFXLEVBQUUsSUFBRyxlQUFlLElBQUksZ0JBQWdCLElBQUUsS0FBSyxFQUFFO2dCQUNwRSxnQkFBZ0IsR0FBQyxJQUFJLENB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ImltcG9ydCB7UGxhdGV9IGZyb20gXCIuL3BsYXRvXCI7XG5cbi8qKlxuICogTGlzdGEgY29uIGFsIG1lbm9zIHRyZXMgcGxhdG9zXG4gKi9cbmV4cG9ydCB0eXBlIG1lbnU9W3g6UGxhdGUsIHk6UGxhdGUsIHo6UGxhdGUsIC4uLmRpbWVuc2lvbmVzOlBsYXRlW11dO1xuLyoqXG4gKiBDbGFzZSBjb24gbGEgcXVlIHJlcHJlc2VudGFyIGVsIG1lbnVcbiAqL1xuZXhwb3J0IGNsYXNzIE1lbnUge1xuICAvKipcbiAgICogQHBhcmFtIG1lbnVzIExpc3RhIGRlIHBsYXRvcyAobWluaW1tbyAzIHBsYXRvcyBwb3IgbWVudSlcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbWVudXM6bWVudSkge1xuICB9XG4gIC8qKlxuICAgKiBDb21wcnVlYmEgcXVlIGVsIG1lbnUgY3VtcGxlIGNvbiBhbG1lbm9zIDMgY2F0ZWdvcmlhcyBkaWZlcmVudGVzXG4gICAqIEByZXR1cm5zIFZlcmRhZGVybyBvIGZhbHNvIHNpIHNlIGN1bXBsZSBvIG5vIGxhIGNvbmRpY2nDs25cbiAgICovXG4gIGNvbXByb2Jhck1lbnUoKTogYm9vbGVhbiB7XG4gICAgbGV0IGZsYWdFbnRyYW50ZT1mYWxzZTtcbiAgICBsZXQgZmxhZ1ByaW1lcnBsYXRvPWZhbHNlO1xuICAgIGxldCBmbGFnU2VndW5kb1BsYXRvPWZhbHNlO1xuICAgIGxldCBmbGFnUG9zdHJlPWZhbHNlO1xuICAgIGxldCBjb250YWRvcj0wO1xuICAgIC8vIFNpIGVsIGNvbnRhZG9yIGVzIDMgbyBtYXlvciBoYXkgMyBjYXRlZ29yaWFzIGRpZmVyZW50ZXMgY29tbyBtaW5pbW8gcG9yXG4gICAgLy8gbG8gcXVlIGVzIHZhbGlkb1xuICAgIHRoaXMubWVudXMuZm9yRWFjaCgocGxhdG8pID0+IHtcbiAgICAgIGlmIChwbGF0by5nZXRDYXRlZ29yeSgpPT0gXCJFbnRyYW50ZVwiICYmIGZsYWdFbnRyYW50ZT09ZmFsc2UpIHtcbiAgICAgICAgY29udGFkb3IrKztcbiAgICAgICAgZmxhZ0VudHJhbnRlPXRydWU7XG4gICAgICB9XG4gICAgICBpZiAocGxhdG8uZ2V0Q2F0ZWdvcnkoKT09IFwiUHJpbWVyIHBsYXRvXCIgJiYgZmxhZ1ByaW1lcnBsYXRvPT1mYWxzZSkge1xuICAgICAgICBmbGFnUHJpbWVycGxhdG89dHJ1ZTtcbiAgICAgICAgY29udGFkb3IrKztcbiAgICAgIH1cbiAgICAgIGlmIChwbGF0by5nZXRDYXRlZ29yeSgpPT0gXCJTZWd1bmRvIHBsYXRvXCIgJiYgZmxhZ1NlZ3VuZG9QbGF0bz09ZmFsc2UpIHtcbiAgICAgICAgZmxhZ1NlZ3VuZG9QbGF0bz10cnVlO1xuICAgICAgICBjb250YWRvcisrO1xuICAgICAgfVxuICAgICAgaWYgKHBsYXRvLmdldENhdGVnb3J5KCk9PSBcIlBvc3RyZVwiICYmIGZsYWdQb3N0cmU9PWZhbHNlKSB7XG4gICAgICAgIGZsYWdQb3N0cmU9dHJ1ZTtcbiAgICAgICAgY29udGFkb3IrKztcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoY29udGFkb3I8Mykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIE3DqXRvZG8gcGFyYSBjYWxjdWxhciBsYSBjb21wb3NpY2lvbiB0b3RhbCBkZSBsb3MgcGxhdG9zXG4gICAqIHF1ZSBjb25mb3JtYW4gZWwgbWVudVxuICAgKiBAcmV0dXJucyByZXRvcm5hIGxhIGNvbXBvc2ljaW9uIHRvdGFsIGRlbCBtZW51XG4gICAqL1xuICBjb21wb3NpY2lvbk51dHJpY2lvbmFsTWVudSgpIHtcbiAgICBsZXQgY2Fsb3JpYXM9MDtcbiAgICBsZXQgcHJvdGVpbmFzPSAwO1xuICAgIGxldCBoaWRyYXRvcz0gMDtcbiAgICBsZXQgbGlwaWRvcz0gMDtcbiAgICBsZXQgY29tcG9zaWNpb25Ub3RhbDogbnVtYmVyW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubWVudXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNhbG9yaWFzKz10aGlzLm1lbnVzW2ldLmdldENvbXBvc2l0aW9uKClbMF07XG4gICAgICBwcm90ZWluYXMrPSB0aGlzLm1lbnVzW2ldLmdldENvbXBvc2l0aW9uKClbMV07XG4gICAgICBoaWRyYXRvcys9IHRoaXMubWVudXNbaV0uZ2V0Q29tcG9zaXRpb24oKVsyXTtcbiAgICAgIGxpcGlkb3MrPSB0aGlzLm1lbnVzW2ldLmdldENvbXBvc2l0aW9uKClbM107XG4gICAgfVxuICAgIGNvbXBvc2ljaW9uVG90YWwgPSBbY2Fsb3JpYXMsIHByb3RlaW5hcywgaGlkcmF0b3MsIGxpcGlkb3NdO1xuICAgIHJldHVybiBjb21wb3NpY2lvblRvdGFsO1xuICB9XG4gIC8qKlxuICAgKiBNw6l0b2RvIHBhcmEgcmV0b3JuYXIgbG9zIGdydXBvcyBkZSBhbGltZW50b3MgcHJlZG9taW5hbnRlcyBkZVxuICAgKiBjYWRhIHBsYXRvIHF1ZSBjb250aWVuZSBlbCBtZW51XG4gICAqIEByZXR1cm5zIHJldG9ybmEgbGEgbGlzdGEgZGUgZ3J1cG8gZGUgYWxpbWVudG9zXG4gICAqL1xuICBsaXN0YWRvR3J1cG9zQWxpbWVudG9zKCk6IHN0cmluZ1tdIHtcbiAgICBjb25zdCBsaXN0YUdydXBvQWxpbWVudG9zOiBzdHJpbmdbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tZW51cy5sZW5ndGg7IGkrKykge1xuICAgICAgbGlzdGFHcnVwb0FsaW1lbnRvcy5wdXNoKHRoaXMubWVudXNbaV0uZ2V0UHJlZG9taW5hbnQoKSk7XG4gICAgfVxuICAgIHJldHVybiBsaXN0YUdydXBvQWxpbWVudG9zO1xuICB9XG4gIC8qKlxuICAgKiBNw6l0b2RvIHF1ZSByZXRvcm5hIGxhIHN1bWEgZGVsIHByZWNpbyBkZSBjYWRhXG4gICAqIHBsYXRvIHF1ZSBjb21wb25lIGVsIG1lbnVcbiAgICogQHJldHVybnMgcmV0b3JuYSBlbCBwcmVjaW8gdG90YWwgZGVsIG1lbnVcbiAgICovXG4gIHByZWNpb1RvdGFsKCkge1xuICAgIGxldCBwcmVjaW8gPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tZW51cy5sZW5ndGg7IGkrKykge1xuICAgICAgcHJlY2lvKz10aGlzLm1lbnVzW2ldLmdldFByaWNlKCk7XG4gICAgfVxuICAgIHJldHVybiBwcmVjaW8udG9GaXhlZCgyKTtcbiAgfVxuICAvKipcbiAgICogV3JpdGUgcGFyYSBpbXByaW1pciB0b2RvcyBsb3MgcGxhdG9zIGRlIHVuIG1lbnUsIGNvblxuICAgKiBsb3MgaW5ncmVkaWVudGVzIGRlIGNhZGEgdW5vXG4gICAqL1xuICBnZXRJbmZvKCk6IHN0cmluZyB7XG4gICAgbGV0IGF1eDogc3RyaW5nID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm1lbnVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhdXggKz0gdGhpcy5tZW51c1tpXS5nZXRJbmZvKCkgKyAnXFxuJztcbiAgICB9XG4gICAgcmV0dXJuIGF1eDtcbiAgfVxufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vdWxsLWVzaXQtaW5mLWRzaS0yMC0yMS1wcmN0MDctbWVudS1kYXRhbW9kZWwtZ3J1cG8taS9zcmMvbWVudS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO29OQU1BOztBQUVHLEdBQ0gsS0FBYSxDQUFBLElBQUksQ0FDZjs7QUFFRyxPQUNILFdBQUEsQ0FBNkIsS0FBN0IsQ0FBdUMsK0NBQVYsS0FBQSxLQUFBLENBQUEsS0FBQSxDQUM1QixDQUNEOzs7QUFHRyxPQUNILGFBQWEsRUFBQSx3QkFDWCxHQUFJLENBQUEsWUFBWSx5QkFBQyxLQUFELENBQWhCLENBQ0EsR0FBSSxDQUFBLGVBQWUseUJBQUMsS0FBRCxDQUFuQixDQUNBLEdBQUksQ0FBQSxnQkFBZ0IseUJBQUMsS0FBRCxDQUFwQixDQUNBLEdBQUksQ0FBQSxVQUFVLHlCQUFDLEtBQUQsQ0FBZCxDQUNBLEdBQUksQ0FBQSxRQUFRLHlCQUFDLENBQUQsQ0FBWixDQUNBO0FBQ0E7QUFQVyx1QkFRWCxLQUFLLEtBQUwsQ0FBVyxPQUFYLENBQW9CLEtBQUQsRUFBVSwrQ0FDM0IsR0FBSSwyQkFBQSxLQUFLLENBQUMsV0FBTixJQUFzQixVQUF0Qiw4QkFBb0MsWUFBWSxFQUFFLEtBQWxELENBQUosQ0FBNkQsbURBQzNELFFBQVEsR0FEbUQsd0JBRTNELFlBQVksQ0FBQyxJQUFiLENBQ0QsQ0FIRCxnQ0FEMkIsd0JBSzNCLEdBQUksMkJBQUEsS0FBSyxDQUFDLFdBQU4sSUFBc0IsY0FBdEIsOEJBQXdDLGVBQWUsRUFBRSxLQUF6RCxDQUFKLENBQW9FLG1EQUNsRSxlQUFlLENBQUMsSUFBaEIsQ0FEa0Usd0JBRWxFLFFBQVEsR0FDVCxDQUhELGdDQUwyQix3QkFTM0IsR0FBSSwyQkFBQSxLQUFLLENBQUMsV0FBTixJQUFzQixlQUF0Qiw4QkFBeUMsZ0JBQWdCLEVBQUUsS0FBM0QsQ0FBSixDQUFzRSxtREFDcEUsZ0JBQWdCLENBQUMsSUFBakIsQ0FEb0Usd0JBRXBFLFFBQVEs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RCxDQWhHYyxDLHdCQUFqQixPQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGxhdGV9IGZyb20gXCIuL3BsYXRvXCI7XG5cbi8qKlxuICogTGlzdGEgY29uIGFsIG1lbm9zIHRyZXMgcGxhdG9zXG4gKi9cbmV4cG9ydCB0eXBlIG1lbnU9W3g6UGxhdGUsIHk6UGxhdGUsIHo6UGxhdGUsIC4uLmRpbWVuc2lvbmVzOlBsYXRlW11dO1xuLyoqXG4gKiBDbGFzZSBjb24gbGEgcXVlIHJlcHJlc2VudGFyIGVsIG1lbnVcbiAqL1xuZXhwb3J0IGNsYXNzIE1lbnUge1xuICAvKipcbiAgICogQHBhcmFtIG1lbnVzIExpc3RhIGRlIHBsYXRvcyAobWluaW1tbyAzIHBsYXRvcyBwb3IgbWVudSlcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgbWVudXM6bWVudSkge1xuICB9XG4gIC8qKlxuICAgKiBDb21wcnVlYmEgcXVlIGVsIG1lbnUgY3VtcGxlIGNvbiBhbG1lbm9zIDMgY2F0ZWdvcmlhcyBkaWZlcmVudGVzXG4gICAqIEByZXR1cm5zIFZlcmRhZGVybyBvIGZhbHNvIHNpIHNlIGN1bXBsZSBvIG5vIGxhIGNvbmRpY2nDs25cbiAgICovXG4gIGNvbXByb2Jhck1lbnUoKTogYm9vbGVhbiB7XG4gICAgbGV0IGZsYWdFbnRyYW50ZT1mYWxzZTtcbiAgICBsZXQgZmxhZ1ByaW1lcnBsYXRvPWZhbHNlO1xuICAgIGxldCBmbGFnU2VndW5kb1BsYXRvPWZhbHNlO1xuICAgIGxldCBmbGFnUG9zdHJlPWZhbHNlO1xuICAgIGxldCBjb250YWRvcj0wO1xuICAgIC8vIFNpIGVsIGNvbnRhZG9yIGVzIDMgbyBtYXlvciBoYXkgMyBjYXRlZ29yaWFzIGRpZmVyZW50ZXMgY29tbyBtaW5pbW8gcG9yXG4gICAgLy8gbG8gcXVlIGVzIHZhbGlkb1xuICAgIHRoaXMubWVudXMuZm9yRWFjaCgocGxhdG8pID0+IHtcbiAgICAgIGlmIChwbGF0by5nZXRDYXRlZ29yeSgpPT0gXCJFbnRyYW50ZVwiICYmIGZsYWdFbnRyYW50ZT09ZmFsc2UpIHtcbiAgICAgICAgY29udGFkb3IrKztcbiAgICAgICAgZmxhZ0VudHJhbnRlPXRydWU7XG4gICAgICB9XG4gICAgICBpZiAocGxhdG8uZ2V0Q2F0ZWdvcnkoKT09IFwiUHJpbWVyIHBsYXRvXCIgJiYgZmxhZ1ByaW1lcnBsYXRvPT1mYWxzZSkge1xuICAgICAgICBmbGFnUHJpbWVycGxhdG89dHJ1ZTtcbiAgICAgICAgY29udGFkb3IrKztcbiAgICAgIH1cbiAgICAgIGlmIChwbGF0by5nZXRDYXRlZ29yeSgpPT0gXCJTZWd1bmRvIHBsYXRvXCIgJiYgZmxhZ1NlZ3VuZG9QbGF0bz09ZmFsc2UpIHtcbiAgICAgICAgZmxhZ1NlZ3VuZG9QbGF0bz10cnVlO1xuICAgICAgICBjb250YWRvcisrO1xuICAgICAgfVxuICAgICAgaWYgKHBsYXRvLmdldENhdGVnb3J5KCk9PSBcIlBvc3RyZVwiICYmIGZsYWdQb3N0cmU9PWZhbHNlKSB7XG4gICAgICAgIGZsYWdQb3N0cmU9dHJ1ZTtcbiAgICAgICAgY29udGFkb3IrKztcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoY29udGFkb3I8Mykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIE3DqXRvZG8gcGFyYSBjYWxjdWxhciBsYSBjb21wb3NpY2lvbiB0b3RhbCBkZSBsb3MgcGxhdG9zXG4gICAqIHF1ZSBjb25mb3JtYW4gZWwgbWVudVxuICAgKiBAcmV0dXJucyByZXRvcm5hIGxhIGNvbXBvc2ljaW9uIHRvdGFsIGRlbCBtZW51XG4gICAqL1xuICBjb21wb3NpY2lvbk51dHJpY2lvbmFsTWVudSgpIHtcbiAgICBsZXQgY2Fsb3JpYXM9MDtcbiAgICBsZXQgcHJvdGVpbmFzPSAwO1xuICAgIGxldCBoaWRyYXRvcz0gMDtcbiAgICBsZXQgbGlwaWRvcz0gMDtcbiAgICBsZXQgY29tcG9zaWNpb25Ub3RhbDogbnVtYmVyW10gPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubWVudXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNhbG9yaWFzKz10aGlzLm1lbnVzW2ldLmdldENvbXBvc2l0aW9uKClbMF07XG4gICAgICBwcm90ZWluYXMrPSB0aGlzLm1lbnVzW2ldLmdldENvbXBvc2l0aW9uKClbMV07XG4gICAgICBoaWRyYXRvcys9IHRoaXMubWVudXNbaV0uZ2V0Q29tcG9zaXRpb24oKVsyXTtcbiAgICAgIGxpcGlkb3MrPSB0aGlzLm1lbnVzW2ldLmdldENvbXBvc2l0aW9uKClbM107XG4gICAgfVxuICAgIGNvbXBvc2ljaW9uVG90YWwgPSBbY2Fsb3JpYXMsIHByb3RlaW5hcywgaGlkcmF0b3MsIGxpcGlkb3NdO1xuICAgIHJldHVybiBjb21wb3NpY2lvblRvdGFsO1xuICB9XG4gIC8qKlxuICAgKiBNw6l0b2RvIHBhcmEgcmV0b3JuYXIgbG9zIGdydXBvcyBkZSBhbGltZW50b3MgcHJlZG9taW5hbnRlcyBkZVxuICAgKiBjYWRhIHBsYXRvIHF1ZSBjb250aWVuZSBlbCBtZW51XG4gICAqIEByZXR1cm5zIHJldG9ybmEgbGEgbGlzdGEgZGUgZ3J1cG8gZGUgYWxpbWVudG9zXG4gICAqL1xuICBsaXN0YWRvR3J1cG9zQWxpbWVudG9zKCk6IHN0cmluZ1tdIHtcbiAgICBjb25zdCBsaXN0YUdydXBvQWxpbWVudG9zOiBzdHJpbmdbXSA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tZW51cy5sZW5ndGg7IGkrKykge1xuICAgICAgbGlzdGFHcnVwb0FsaW1lbnRvcy5wdXNoKHRoaXMubWVudXNbaV0uZ2V0UHJlZG9taW5hbnQoKSk7XG4gICAgfVxuICAgIHJldHVybiBsaXN0YUdydXBvQWxpbWVudG9zO1xuICB9XG4gIC8qKlxuICAgKiBNw6l0b2RvIHF1ZSByZXRvcm5hIGxhIHN1bWEgZGVsIHByZWNpbyBkZSBjYWRhXG4gICAqIHBsYXRvIHF1ZSBjb21wb25lIGVsIG1lbnVcbiAgICogQHJldHVybnMgcmV0b3JuYSBlbCBwcmVjaW8gdG90YWwgZGVsIG1lbnVcbiAgICovXG4gIHByZWNpb1RvdGFsKCkge1xuICAgIGxldCBwcmVjaW8gPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tZW51cy5sZW5ndGg7IGkrKykge1xuICAgICAgcHJlY2lvKz10aGlzLm1lbnVzW2ldLmdldFByaWNlKCk7XG4gICAgfVxuICAgIHJldHVybiBwcmVjaW8udG9GaXhlZCgyKTtcbiAgfVxuICAvKipcbiAgICogV3JpdGUgcGFyYSBpbXByaW1pciB0b2RvcyBsb3MgcGxhdG9zIGRlIHVuIG1lbnUsIGNvblxuICAgKiBsb3MgaW5ncmVkaWVudGVzIGRlIGNhZGEgdW5vXG4gICAqL1xuICBnZXRJbmZvKCk6IHN0cmluZyB7XG4gICAgbGV0IGF1eDogc3RyaW5nID0gJyc7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm1lbnVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhdXggKz0gdGhpcy5tZW51c1tpXS5nZXRJbmZvKCkgKyAnXFxuJztcbiAgICB9XG4gICAgcmV0dXJuIGF1eDtcbiAgfVxufVxuIl19