{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/plato.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-i/src/plato.ts"],"names":[],"mappings":"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","sourcesContent":["import {Food} from \"./alimento\";\n\ntype Categoria = \"Entrante\" | \"Primer plato\" | \"Segundo Plato\" | \"Postre\";\n\nexport class Plate {\n  private TotalComposition: number[];\n  private TotalPrice: number;\n  private Predominante: string;\n  constructor(private readonly category: Categoria,\n    private readonly foods: Food[],\n    private readonly amount: number[]) {\n    if (this.foods.length==this.amount.length) {\n      this.composition();\n    }\n    this.addPrice();\n    this.foodPredominante();\n  }\n\n  /**\n   * Composición nutricional del plato. Suma la composición nutricional\n   * de los alimentos\n   */\n  private composition() {\n    let calorias: number = 0;\n    let proteinas: number = 0;\n    let hidratos: number = 0;\n    let lipidos: number = 0;\n    for (let i = 0; i < this.foods.length; i++) {\n      calorias += this.foods[i].getNutrients()[0] * this.amount[i] / 100;\n      proteinas += this.foods[i].getNutrients()[1] * this.amount[i] / 100;\n      hidratos += this.foods[i].getNutrients()[2] * this.amount[i] / 100;\n      lipidos += this.foods[i].getNutrients()[3] * this.amount[i] / 100;\n    }\n    this.TotalComposition = [Math.trunc(calorias),\n      Math.trunc(proteinas), Math.trunc(hidratos), Math.trunc(lipidos)];\n  }\n\n  /**\n   * Nos permite determinar el grupo de alimento predominante del plato\n   */\n  private foodPredominante() {\n    let g1: number = 0;\n    let g2: number = 0;\n    let g3: number = 0;\n    let g4: number = 0;\n    let g5: number = 0;\n    for (let i = 0; i < this.foods.length; i++) {\n      switch (this.foods[i].getGroup()) {\n        case 'Grupo1':\n          g1++;\n          break;\n        case 'Grupo2':\n          g2++;\n          break;\n        case 'Grupo3':\n          g3++;\n          break;\n        case 'Grupo4':\n          g4++;\n          break;\n        case 'Grupo5':\n          g5++;\n          break;\n        default:\n          break;\n      }\n    }\n    if (g1 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo1\";\n    } else if (g2 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo2\";\n    } else if (g3 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo3\";\n    } else if (g4 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo4\";\n    } else if (g5 == Math.max(g1, g2, g3, g4, g5)) {\n      this.Predominante = \"Grupo5\";\n    }\n  }\n\n  /**\n   * Sumamos el precio de los alimentos, para determinar el precio del plato.\n   */\n  private addPrice() {\n    let acumulador: number = 0;\n    for (let i = 0; i < this.foods.length; i++) {\n      acumulador += this.foods[i].getPrice();\n    }\n    this.TotalPrice = acumulador;\n  }\n  /**\n   * getter de la categoria del plato\n   * @returns retorna la categoría del plato\n   */\n  getCategory() {\n    return this.category;\n  }\n  /**\n   * getter de la categoria del plato\n   * @returns retorna la categoría del plato\n   */\n  getFood(): Food[] {\n    return this.foods;\n  }\n  /**\n * Obtenemos la suma de los precios de todos lo alimentos de los que se\n * compone el plato\n * @returns Precio del plato\n */\n  public getPrice() : number {\n    return this.TotalPrice;\n  }\n\n  /**\n   * Obtenemos la composición nutricional del plato\n   * @returns Composición nutricional del plato\n   */\n  public getComposition() : number[] {\n    return this.TotalComposition;\n  }\n\n  /**\n   * Obtenemos el grupo predominante de alimentos que componen el plato\n   * @returns El nombre del grupo predominante\n   */\n  public getPredominant() : string {\n    return this.Predominante;\n  }\n}\n"]}